@page "/indoor"

<div class="map">
    <!-- map is rendered row by row, top to bottom -->
    @for (int y = 0; y < map.Height; y++)
    {
        <div id="row_@y" class="row">
        @for (int x = 0; x < map.Width; x++)
        {
            string imgFileName = map.Tiles[x,y].ImageName + ".png";
            string tiletype = map.Tiles[x,y].TileType.ToString();
            <div id="@x,@y" class="tile">
                <div class="map_img" style="background-image: url('img/uf_terrain/@imgFileName');" alt="@x,@y (@tiletype)"> </div>
                @foreach (var decoration in map.Decorations?[x,y])
                {
                    string decImgFileName = decoration.ImageName + ".png";

<!--
                     TODO: no onclick capturing and bubbling; so onclick is always caught by the topmost img. Means that this only works if
                           topmost decoration in tile has the relevant Interact().
-->
                    <div class="map_img" style="background-image: url('img/uf_terrain/@decImgFileName');" alt="@x,@y (go)" > </div>
                    if (decoration.Interact != null){
                        <button class="interact_button" onclick=@(() => Interact(decoration)) /> 
                    }
                }
            </div>
        }
        </div>
    }
</div>

@functions {
    Map map = CreateMap(30, 20);

    // Create map
    private static Map CreateMap(int width, int height)
    {
        var dg = new DungeonGenerator(width, height);
        dg.Generate();
        dg.Map.RenderGameObjects();
        return dg.Map;
    }

    private void Interact(Decoration decoration)
    {
        decoration.Interact();
        map.RenderGameObjects();
    }    
}